<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property value="2" name="order"/>
	</beans:bean>
	
	<!-- AbstractExcelView 클래스를 뷰로 사용하기 위해 BeanNameViewResolver 
	빈즈 생성 ViewResolver의 우선순위를 위해 order 프로퍼티 사용(작은 value가 우선순위가 높음)
	ViewResolver가 null 을 리턴하면 다음 순위의 ViewResolver에게 뷰를 요청 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">	
		<beans:property value="1" name="order"/>	
	</beans:bean>

	<!-- Controller 에서 download 라는 뷰를 호출하면 ExcelView 클래스 처리 -->	
	<beans:bean class="com.jh.tripleb.common.excel.model.vo.ExcelDownloadInvoice" id="ExcelDownloadInvoice"/>
	
	<context:component-scan base-package="com.jh.tripleb" />
	
	<interceptors>
		
		<interceptor>
			<mapping path="/*"/>
			<exclude-mapping path="/login.utr"/>
			<beans:bean id="LoginInterceptor" class="com.jh.tripleb.common.interceptor.LoginInterceptor"></beans:bean>
		</interceptor>
		
		
	</interceptors>
	
	
	
	
	
</beans:beans>
