<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="salesMapper">

	<!-- 상품 리스트 조회(장미경) -->
	<select id="selectListProduct" resultType="Product">
		select DISTINCT PRODUCT_NAME
		from product
        where PRODUCT_STATUS = 'Y'
        order by PRODUCT_NAME
	</select>
	
	<!-- 트레이너 조회(장미경) -->
	<select id="selectListTrainer" resultType="Trainer">
		select TRAINER_NAME
    	from trainer
    	order by TRAINER_NAME
	</select>
	
	<!-- 매출 리스트 조회(장미경) -->
	<select id="selectListSalesDto" parameterType="String" resultType="SalesDto">
       	select Pay_Date, Product_Category, Product_Name, Trainer_Name, Member_Name, Pay_Price, Pay_Type 
	    from PayInfo                
        join Product using(Product_No) 
        full outer join ClassInfo using(Product_No)
        full outer join Trainer using(Trainer_No)
        join Member using(Member_No)	 
	    where to_char(Pay_Date,'yyyy') = #{currentYear}
	    order by Pay_Date desc
	</select>
			
	<!-- 매출 리스트 검색(장미경) -->	
	<select id="searchListSalesDto" parameterType="SalesSearchDto" resultType="SalesDto">
		select Pay_Date, Product_Category, Product_Name, Trainer_Name, Member_Name, Pay_Price, Pay_Type 
	    from PayInfo                
        join Product using(Product_No) 
        full outer join ClassInfo using(Product_No)
        full outer join Trainer using(Trainer_No)
        join Member using(Member_No)
	    where Pay_Date between to_date(#{startDate}, 'YYYY-MM-DD') and to_date(#{endDate}, 'YYYY-MM-DD')
	    <choose>
		   	<when test="searchProduct != ''">
		   		and Product_Name = #{searchProduct}
		   	</when>
		   	<when test="searchTrainer != ''">
		   		and Trainer_Name = #{searchTrainer}
		   	</when>
		   	<when test="searchStr != ''">
		   		and (Product_Category LIKE '%' || #{searchStr} || '%'
		   			 OR Product_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Trainer_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Member_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Pay_Type LIKE '%' || #{searchStr} || '%'
		   		)
		   	</when>	    
	    </choose>
	    order by Pay_Date desc
	</select>
	
	<!-- 엑셀다운로드용 매출 리스트 검색(장미경) -->
	<select id="selectListSalesExcel" parameterType="SalesSearchDto" resultType="hashmap">
		select Pay_Date, Product_Category, Product_Name, Trainer_Name, Member_Name, Pay_Price, Pay_Type 
	    from PayInfo                
        join Product using(Product_No) 
        full outer join ClassInfo using(Product_No)
        full outer join Trainer using(Trainer_No)
        join Member using(Member_No)	   
	    where Pay_Date between to_date(#{startDate}, 'YYYY-MM-DD') and to_date(#{endDate}, 'YYYY-MM-DD')
	    <choose>
		   	<when test="searchProduct != ''">
		   		and Product_Name = #{searchProduct}
		   	</when>
		   	<when test="searchTrainer != ''">
		   		and Trainer_Name = #{searchTrainer}
		   	</when>
		   	<when test="searchStr != ''">
		   		and (Product_Category LIKE '%' || #{searchStr} || '%'
		   			 OR Product_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Trainer_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Member_Name LIKE '%' || #{searchStr} || '%'
		   			 OR Pay_Type LIKE '%' || #{searchStr} || '%'
		   		)
		   	</when>	    
	    </choose>
	    order by Pay_Date desc
	</select>
	
	<!-- 월별 매출 조회(장미경) -->
	<select id="selectListMonth" parameterType="String" resultType="SalesDto">
		select Pay_Date, Product_Category, Product_Name, Pay_Price, Pay_Type 
	    from PayInfo
	    join Product using(Product_No)
	    where to_char(Pay_Date,'yyyymm') = #{months}
	</select>
		
	<!-- 상품별 매출 조회(장미경) -->
	<select id="salesListProduct" resultType="SalesProductDto">
		select Product_Name, SUM(Pay_Price) AS Pay_Price
		from PayInfo 
		join Product 
		using(Product_No) 
		group by Product_Name 
		order by Product_Name
	</select>
	
	<!-- 트레이너별 매출 조회(장미경) -->
	<select id="salesListTrainer" resultType="SalesProductDto">
		select TRAINER_NAME, SUM(Pay_Price) AS Pay_Price
		from PayInfo 
		join Product using(Product_No) 
		join ClassInfo using(Product_No)
		join Trainer using(Trainer_No)
		group by TRAINER_NAME
	</select>	
	
	<!-- 월별 목표 매출(장미경) -->
	<select id="selectGoal" parameterType="_int" resultType="SalesGoal">
 		select MONTH, SALESPRICE
        from salesgoal
        where MONTH = #{month}
	</select>


</mapper>
